version: "3.3"

services:
  idm_framework_data:
    image: postgres:16-alpine
    environment:
     - POSTGRES_PASSWORD_FILE=/run/secrets/mp_database_password.txt
     - POSTGRES_USER=midpoint
     - POSTGRES_INITDB_ARGS=--lc-collate=en_US.utf8 --lc-ctype=en_US.utf8
    networks:
     - net
    secrets:
     - mp_database_password.txt
    volumes:
     - idm_framework_data:/var/lib/postgresql/data

  data_init:
    image: evolveum/midpoint:4.8-alpine
    command: >
        bash -c "
        cd /opt/midpoint ;
        bin/midpoint.sh init-native ;
        echo ' - - - - - - ' ;
        if [ $$(bin/ninja.sh verify 2>&1 | grep -c 'ERROR' ) -gt 0 ] ;
        then
        bin/ninja.sh run-sql --create --mode REPOSITORY ;
        bin/ninja.sh run-sql --create --mode AUDIT ;
        else
        echo -e '\\n Repository init is not needed...' ;
        fi ;
        "
    depends_on:
     - idm_framework_data
    environment:
     - MP_SET_midpoint_repository_jdbcUsername=midpoint
     - MP_SET_midpoint_repository_jdbcPassword_FILE=/run/secrets/mp_database_password.txt
     - MP_SET_midpoint_repository_jdbcUrl=jdbc:postgresql://idm_framework_data:5432/midpoint
     - MP_SET_midpoint_repository_database=postgresql
     - MP_INIT_CFG=/opt/midpoint/var
     - MP_SET_midpoint_keystore_keyStorePassword_FILE=/run/secrets/mp_keystore_password.txt
     - MP_KEYSTORE=/opt/midpoint/var/keystore.jceks

    secrets:
     - mp_database_password.txt
     - mp_keystore_password.txt
    networks:
     - net
    volumes:
     - idm_framework_home:/opt/midpoint/var

  nginx:
    image: nginx:latest
    container_name: Nginx
    restart: unless-stopped
    tty: true
    ports:
      - "443:443"
    volumes:
      - ./configs-and-secrets/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # Place the certificate that will be used to secure the IdM Framework's traffic in /configs-and-secrets/nginx folder of the package and replace <Certificate.crt> with the certificate's name.
      - ./configs-and-secrets/nginx/<certificate.crt>:/etc/nginx/<certificate.crt>
      # Place the private key corresponding to above certificate in /configs-and-secrets/nginx folder of the package and replace <private.key> with they file's name.
      - ./configs-and-secrets/nginx/<private.key>:/etc/nginx/<private.key>
    secrets:
      # Replace <private.key> with the key file's name.
     - <private.key>
    networks:
     - net

  idm_framework_server:
    image: evolveum/midpoint:4.8-alpine
    container_name: idm-framework-server
    hostname: idm-framework-container
    depends_on:
      data_init:
        condition: service_completed_successfully
      idm_framework_data:
        condition: service_started
    command: [ "/opt/midpoint/bin/midpoint.sh", "container" ]
    environment:
     - MP_SET_midpoint_repository_jdbcUsername=midpoint
     - MP_SET_midpoint_repository_jdbcPassword_FILE=/run/secrets/mp_database_password.txt
     - MP_SET_midpoint_repository_jdbcUrl=jdbc:postgresql://idm_framework_data:5432/midpoint
     - MP_SET_midpoint_repository_database=postgresql
     - MP_SET_midpoint_keystore_keyStorePassword_FILE=/run/secrets/mp_keystore_password.txt
     - MP_UNSET_midpoint_repository_hibernateHbm2ddl=1
     - MP_NO_ENV_COMPAT=1
     - MP_ENTRY_POINT=/opt/midpoint-dirs-docker-entrypoint
    networks:
     - net
    secrets:
     - mp_database_password.txt
     - mp_keystore_password.txt
    volumes:
     - idm_framework_home:/opt/midpoint/var
     - ./entrypoint:/opt/midpoint-dirs-docker-entrypoint/:ro

networks:
  net:
    driver: bridge

secrets:
  mp_database_password.txt:
    file: ./configs-and-secrets/IdM_Framework/database_password.txt
  mp_keystore_password.txt:
    file: ./configs-and-secrets/IdM_Framework/keystore_password.txt
  # Replace the <private.key> tag with the name of private key file.
  <private.key>:
    file: ./configs-and-secrets/nginx/<private.key>

volumes:
  idm_framework_data:
  idm_framework_home: